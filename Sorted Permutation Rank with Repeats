#define mod 1000003

long long int power(long long int a,long long int p)
{
    if(a==0)
    return 0;
    if(p==0)
    return 1;
    
    //if p is even
    long long int res=1;
    if(p%2==0)
    {
        res=power(a,p/2);
        res=(res*res)%mod;
        
    }
    else
    {
        res=a%mod;
        res=(res*(power(a,p-1)%mod))%mod;
    }
    return res%mod;
}
int Solution::findRank(string A) {
    int n=A.length();
    int fact[n];
    fact[0]=1;
    for(int i=1;i<n;i++)
    {
        fact[i]=((i%mod)*(fact[i-1]%mod)%mod);
    }
    int ans=0;
    for(int i=0;i<n;i++)
    {
        int count=0;
        for(int j=i+1;j<n;j++)
        {
            if(A[j]<A[i])
            count++;
        }
        map<char,int>m;
        for(int k=i;k<A.size();k++)
        m[A[k]]++;
        
        long long int d=1;
        for(auto a:m)
        d=((d%mod)*(fact[a.second]%mod))%mod;
        
        ans=(ans + count*((fact[A.size()-i-1]%mod)*power(d,mod-2)%mod)%mod)%mod;
    }
    return (ans+1)%mod;
}
